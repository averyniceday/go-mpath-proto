/*
 * Genome Nexus API
 *
 * This page shows how to use HTTP requests to access the Genome Nexus API. There are more high level clients available in Python, R, JavaScript, TypeScript and various other languages as well as a command line client to annotate MAF and VCF. See https://docs.genomenexus.org/api.  Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.   We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.
 *
 * API version: 2.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type VariantAnnotation struct {

	// Allele string (e.g: A/T)
	AlleleString string `json:"allele_string,omitempty"`

	// Annotation data as JSON string
	AnnotationJSON string `json:"annotationJSON,omitempty"`

	// Variant Annotation Summary
	AnnotationSummary *VariantAnnotationSummary `json:"annotation_summary,omitempty"`

	// NCBI build number
	AssemblyName string `json:"assembly_name,omitempty"`

	// ClinVar
	Clinvar *ClinvarAnnotation `json:"clinvar,omitempty"`

	ColocatedVariants []ColocatedVariant `json:"colocatedVariants,omitempty"`

	// End position
	End int32 `json:"end,omitempty"`

	Hgvsg string `json:"hgvsg,omitempty"`

	// Hotspot Annotation
	Hotspots *HotspotAnnotation `json:"hotspots,omitempty"`

	// Variant id
	Id string `json:"id"`

	// intergenicConsequences
	IntergenicConsequences []IntergenicConsequences `json:"intergenic_consequences"`

	// Most severe consequence
	MostSevereConsequence string `json:"most_severe_consequence,omitempty"`

	// Mutation Assessor Annotation
	MutationAssessor *MutationAssessorAnnotation `json:"mutation_assessor,omitempty"`

	// My Variant Info Annotation
	MyVariantInfo *MyVariantInfoAnnotation `json:"my_variant_info,omitempty"`

	// Nucleotide Context Annotation
	NucleotideContext *NucleotideContextAnnotation `json:"nucleotide_context,omitempty"`

	// Oncokb
	Oncokb *OncokbAnnotation `json:"oncokb,omitempty"`

	// Original variant query
	OriginalVariantQuery string `json:"originalVariantQuery"`

	// Post Translational Modifications
	Ptms *PtmAnnotation `json:"ptms,omitempty"`

	// Chromosome
	SeqRegionName string `json:"seq_region_name,omitempty"`

	SignalAnnotation *SignalAnnotation `json:"signalAnnotation,omitempty"`

	// Start position
	Start int32 `json:"start,omitempty"`

	// Strand (negative or positive)
	Strand int32 `json:"strand,omitempty"`

	// Status flag indicating whether variant was succesfully annotated
	SuccessfullyAnnotated bool `json:"successfully_annotated,omitempty"`

	// List of transcripts
	TranscriptConsequences []TranscriptConsequence `json:"transcript_consequences,omitempty"`

	// Variant key
	Variant string `json:"variant"`
}
